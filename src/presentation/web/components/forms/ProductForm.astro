---

const categorias = [
    {value: 'Ropa para Hombres', text: 'Ropa para Hombres'},
    {value: 'Ropa para Mujeres', text: 'Ropa para Mujeres'},
    {value: 'Ropa para Niños', text: 'Ropa para Niños'},
    {value: 'Accesorios', text: 'Accesorios'},
    {value: 'Calzado', text: 'Calzado'},
    {value: 'Deportivo', text: 'Deportivo'},
    {value: 'Formal', text: 'Formal'},
    {value: 'Casual', text: 'Casual'},
];


---

<div class="max-w-3xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <!-- Form Header -->
        <div class="bg-picton-blue-500 px-6 py-4">
            <h1 class="text-xl font-bold text-white">Agregar Nuevo Producto</h1>
            <p class="text-picton-blue-100 text-sm mt-1">
                Complete todos los campos para agregar un nuevo producto al
                inventario
            </p>
        </div>

        <!-- Form Body -->
        <form id="productForm" class="px-6 py-8 space-y-6">
            <!-- Product Name -->
            <div>
                <label
                    for="productName"
                    class="block text-sm font-medium text-gray-700"
                >
                    Nombre del Producto <span class="text-red-500">*</span>
                </label>
                <input
                    type="text"
                    id="productName"
                    name="productName"
                    required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-picton-blue-500 focus:ring-picton-blue-500 sm:text-sm p-2 border"
                    placeholder="Ej: Camiseta Casual Manga Corta"
                />
            </div>

            <!-- Category -->
            <div>
                <label
                    for="category"
                    class="block text-sm font-medium text-gray-700"
                >
                    Categoría <span class="text-red-500">*</span>
                </label>
                <select
                    id="category"
                    name="category"
                    required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-picton-blue-500 focus:ring-picton-blue-500 sm:text-sm p-2 border"
                >
                    <option value="" disabled selected
                        >Seleccione una categoría</option
                    >
                    {categorias.map( ({value, text}) => <option value={value}>{text}</option>)}
                </select>
            </div>

            <!-- Prices - Two columns on larger screens -->
            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
                <!-- Sale Price -->
                <div>
                    <label
                        for="salePrice"
                        class="block text-sm font-medium text-gray-700"
                    >
                        Precio de Venta por Unidad <span class="text-red-500"
                            >*</span
                        >
                    </label>
                    <div class="mt-1 relative rounded-md shadow-sm">
                        <div
                            class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                        >
                            <span class="text-gray-500 sm:text-sm">$</span>
                        </div>
                        <input
                            type="number"
                            id="salePrice"
                            name="salePrice"
                            required
                            min="0.01"
                            step="0.01"
                            class="block w-full pl-7 pr-12 rounded-md border-gray-300 focus:border-picton-blue-500 focus:ring-picton-blue-500 sm:text-sm p-2 border"
                            placeholder="0.00"
                        />
                        <div
                            class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none"
                        >
                            <span class="text-gray-500 sm:text-sm">USD</span>
                        </div>
                    </div>
                </div>

                <!-- Purchase Price -->
                <div>
                    <label
                        for="purchasePrice"
                        class="block text-sm font-medium text-gray-700"
                    >
                        Precio de Compra por Unidad <span class="text-red-500"
                            >*</span
                        >
                    </label>
                    <div class="mt-1 relative rounded-md shadow-sm">
                        <div
                            class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                        >
                            <span class="text-gray-500 sm:text-sm">$</span>
                        </div>
                        <input
                            type="number"
                            id="purchasePrice"
                            name="purchasePrice"
                            required
                            min="0.01"
                            step="0.01"
                            class="block w-full pl-7 pr-12 rounded-md border-gray-300 focus:border-picton-blue-500 focus:ring-picton-blue-500 sm:text-sm p-2 border"
                            placeholder="0.00"
                        />
                        <div
                            class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none"
                        >
                            <span class="text-gray-500 sm:text-sm">USD</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Image Upload -->
            <div>
                <label class="block text-sm font-medium text-gray-700">
                    Imagen del Producto <span class="text-red-500">*</span>
                </label>
                <div
                    id="dropZone"
                    class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md cursor-pointer hover:bg-picton-blue-50 transition-colors"
                >
                    <div class="space-y-1 text-center">
                        <svg
                            class="mx-auto h-12 w-12 text-gray-400"
                            stroke="currentColor"
                            fill="none"
                            viewBox="0 0 48 48"
                            aria-hidden="true"
                        >
                            <path
                                d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
                                stroke-width="2"
                                stroke-linecap="round"
                                stroke-linejoin="round"></path>
                        </svg>
                        <div class="flex text-sm text-gray-600">
                            <label
                                for="productImage"
                                class="relative cursor-pointer rounded-md font-medium text-picton-blue-600 hover:text-picton-blue-500 focus-within:outline-none"
                            >
                                <span>Sube una imagen</span>
                                <input
                                    id="productImage"
                                    name="productImage"
                                    type="file"
                                    class="sr-only"
                                    accept="image/*"
                                    required
                                />
                            </label>
                            <p class="pl-1">o arrastra y suelta</p>
                        </div>
                        <p class="text-xs text-gray-500">
                            PNG, JPG, GIF hasta 10MB
                        </p>
                        <div id="imagePreviewContainer" class="hidden mt-3">
                            <img
                                id="imagePreview"
                                class="mx-auto max-h-48 rounded-md"
                                src="#"
                                alt="Vista previa de la imagen"
                            />
                            <p id="fileName" class="text-xs text-gray-500 mt-2">
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Information -->
            <div>
                <label
                    for="description"
                    class="block text-sm font-medium text-gray-700"
                >
                    Descripción del Producto
                </label>
                <textarea
                    id="description"
                    name="description"
                    rows="3"
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-picton-blue-500 focus:ring-picton-blue-500 sm:text-sm p-2 border"
                    placeholder="Describa las características del producto..."
                ></textarea>
            </div>

            <!-- Submit Button -->
            <div class="flex justify-end">
                <button
                    type="button"
                    class="mr-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-picton-blue-700 bg-picton-blue-100 hover:bg-picton-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-picton-blue-500"
                >
                    Cancelar
                </button>
                <button
                    type="submit"
                    class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-picton-blue-500 hover:bg-picton-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-picton-blue-500"
                >
                    Guardar Producto
                </button>
            </div>
        </form>
    </div>
</div>

<!--script>
    // Drag and drop functionality
    document.addEventListener("DOMContentLoaded", function () {
        const dropZone = document.getElementById("dropZone") as HTMLDivElement;
        const fileInput = document.getElementById("productImage") as HTMLInputElement;
        const imagePreview = document.getElementById("imagePreview") as HTMLImageElement;
        const imagePreviewContainer = document.getElementById(
            "imagePreviewContainer",
        ) as HTMLDivElement;
        const fileName = document.getElementById("fileName") as HTMLParagraphElement;
        const form = document.getElementById("productForm") as HTMLFormElement;

        // Prevent default drag behaviors
        ["dragenter", "dragover", "dragleave", "drop"].forEach((eventName) => {
            dropZone.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });

        // Highlight drop zone when item is dragged over it
        ["dragenter", "dragover"].forEach((eventName) => {
            dropZone.addEventListener(eventName, highlight, false);
        });

        ["dragleave", "drop"].forEach((eventName) => {
            dropZone.addEventListener(eventName, unhighlight, false);
        });

        // Handle dropped files
        dropZone.addEventListener("drop", handleDrop, false);

        // Handle file input change
        fileInput.addEventListener("change", handleFiles, false);

        // Handle form submission
        form.addEventListener("submit", handleSubmit, false);

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        function highlight() {
            dropZone.classList.add("drag-active");
        }

        function unhighlight() {
            dropZone.classList.remove("drag-active");
        }

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;

            if (files.length) {
                fileInput.files = files;
                handleFiles();
            }
        }

        function handleFiles() {
            const file = fileInput.files[0];
            if (file) {
                // Show file name
                fileName.textContent = file.name;

                // Show image preview
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreviewContainer.classList.remove("hidden");
                };
                reader.readAsDataURL(file);
            }
        }

        function handleSubmit(e) {
            e.preventDefault();

            // Get form values
            const productName = document.getElementById("productName").value;
            const category = document.getElementById("category").value;
            const salePrice = document.getElementById("salePrice").value;
            const purchasePrice =
                document.getElementById("purchasePrice").value;
            const description = document.getElementById("description").value;
            const file = fileInput.files[0];

            // Validate form
            if (
                !productName ||
                !category ||
                !salePrice ||
                !purchasePrice ||
                !file
            ) {
                alert("Por favor complete todos los campos obligatorios.");
                return;
            }

            // Here you would normally send the data to a server
            // For this example, we'll just show an alert
            alert(
                `Producto guardado con éxito!\n\nNombre: ${productName}\nCategoría: ${category}\nPrecio de Venta: $${salePrice}\nPrecio de Compra: $${purchasePrice}`,
            );

            // Reset form
            form.reset();
            imagePreviewContainer.classList.add("hidden");
        }

        // Click on drop zone to trigger file input
        dropZone.addEventListener("click", function () {
            fileInput.click();
        });
    });
</script-->
<script>
    document.addEventListener("astro:page-load", () => {
        const dropZone = document.getElementById(
            "dropZone",
        ) as HTMLElement | null;
        const fileInput = document.getElementById(
            "productImage",
        ) as HTMLInputElement | null;
        const imagePreview = document.getElementById(
            "imagePreview",
        ) as HTMLImageElement | null;
        const imagePreviewContainer = document.getElementById(
            "imagePreviewContainer",
        ) as HTMLElement | null;
        const fileName = document.getElementById(
            "fileName",
        ) as HTMLParagraphElement | null;
        const form = document.getElementById(
            "productForm",
        ) as HTMLFormElement | null;

        if (
            !dropZone ||
            !fileInput ||
            !imagePreview ||
            !imagePreviewContainer ||
            !fileName ||
            !form
        ) {
            console.error("Uno o más elementos del DOM no fueron encontrados.");
            return;
        }

        const preventDefaults = (e: Event): void => {
            e.preventDefault();
            e.stopPropagation();
        };

        const highlight = (): void => {
            dropZone.classList.add("drag-active");
        };

        const unhighlight = (): void => {
            dropZone.classList.remove("drag-active");
        };

        const handleDrop = (e: DragEvent): void => {
            preventDefaults(e);
            const dt = e.dataTransfer;
            if (!dt) return;

            const files = dt.files;
            if (files && files.length > 0) {
                fileInput.files = files;
                handleFiles();
            }
        };

        const handleFiles = (): void => {
            const file = fileInput.files?.[0];
            if (file) {
                fileName.textContent = file.name;

                const reader = new FileReader();
                reader.onload = (e: ProgressEvent<FileReader>) => {
                    const result = e.target?.result;
                    if (typeof result === "string") {
                        imagePreview.src = result;
                        imagePreviewContainer.classList.remove("hidden");
                    }
                };
                reader.readAsDataURL(file);
            }
        };

        const handleSubmit = (e: Event): void => {
            e.preventDefault();

            const productName = (
                document.getElementById(
                    "productName",
                ) as HTMLInputElement | null
            )?.value;
            const category = (
                document.getElementById("category") as HTMLInputElement | null
            )?.value;
            const salePrice = (
                document.getElementById("salePrice") as HTMLInputElement | null
            )?.value;
            const purchasePrice = (
                document.getElementById(
                    "purchasePrice",
                ) as HTMLInputElement | null
            )?.value;
            const description = (
                document.getElementById(
                    "description",
                ) as HTMLInputElement | null
            )?.value;
            const file = fileInput.files?.[0];

            if (
                !productName ||
                !category ||
                !salePrice ||
                !purchasePrice ||
                !file
            ) {
                alert("Por favor complete todos los campos obligatorios.");
                return;
            }

            alert(
                `Producto guardado con éxito!\n\nNombre: ${productName}\nCategoría: ${category}\nPrecio de Venta: $${salePrice}\nPrecio de Compra: $${purchasePrice}`,
            );

            form.reset();
            imagePreviewContainer.classList.add("hidden");
        };

        // Agregar eventos de drag
        ["dragenter", "dragover", "dragleave", "drop"].forEach((eventName) => {
            dropZone.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });

        ["dragenter", "dragover"].forEach((eventName) => {
            dropZone.addEventListener(eventName, highlight, false);
        });

        ["dragleave", "drop"].forEach((eventName) => {
            dropZone.addEventListener(eventName, unhighlight, false);
        });

        dropZone.addEventListener("drop", handleDrop, false);
        fileInput.addEventListener("change", handleFiles, false);
        form.addEventListener("submit", handleSubmit, false);

        dropZone.addEventListener("click", () => {
            fileInput.click();
        });
    });
</script>
