---

interface Props{
    href: string;
    text: string;
    type: string;
}

const {href, text, type} = Astro.props;

const pathName = Astro.url.pathname;

let typeClass;
if (type === 'mobile'){
    typeClass = 'mobile-nav-link';
}else{
    typeClass = 'desktop-nav-link';
}

const typeActive = `${typeClass}-active`;
const isActive = href === pathName;




---

<!-- NAV DE MOBILE -->
<div>


<a
    href={href}
    class:list={[
        {
            [typeActive]: isActive,
            [typeClass]: !isActive     
        }
    ]}
>
    {text}
</a>
{isActive && type==='desktop' ? (
            <div
              transition:name="menu-line"
              class="border-b-2 border-blue-500 "
            />
          ) : (
            <div class="border-b-2 border-transparent" />
          )}
</div>
<style>
    @reference "@/presentation/assets/styles/global.css";
    .desktop-nav-link{
        @apply border-transparent text-gray-500 hover:border-picton-blue-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium;
    }
    .mobile-nav-link{
        @apply border-transparent text-gray-500 hover:bg-gray-50 hover:border-picton-blue-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium;
    }
    .desktop-nav-link-active{
        @apply text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium;
    }
    .mobile-nav-link-active{
        @apply bg-picton-blue-50 border-picton-blue-500 text-picton-blue-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium;
    }
</style>